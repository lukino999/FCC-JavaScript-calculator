{"version":3,"sources":["components/Display.js","mapping/keyMapping.js","actions/types.js","components/Key.js","actions/index.js","components/Keypad.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","display","instant","immediateExecutionLogic","props","className","id","keyMapping","text","action","keypress","key","type","keyRef","resetAnimation","ref","classList","remove","setTimeout","add","onClick","handleKeypress","KeyPad","keys","i","length","keyMap","push","renderKeys","App","href","target","VAL","INITIAL_STATE","temp","stack","zeroIsAllowed","lastEntryWasOp","calculate","value","parseFloat","firstOperand","shift","op","secondOperand","res","unshift","splice","isTooLong","string","split","integer","decimal","digits","store","createStore","tempStack","pop","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.34d01046.chunk.js","sourcesContent":["import './css/Display.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst renderExecution = (instant) => {\n  if (instant) {\n    return (\n      <>\n        <span>IMMEDIATE </span >\n        <span className='hidden'>FORMULA</span>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <span className='hidden'>IMMEDIATE </span >\n        <span >FORMULA</span>\n      </>\n    )\n  }\n}\n\nconst Display = (props) => {\n\n  return (\n    <div className='display__container'>\n      <div className='display'>\n        <div className='display-mode'>\n          {renderExecution(props.instant)}\n        </div>\n        <p id='display' className='display-text'>\n          {props.display}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport const logState = (state) => {\n\n  const { display, temp, stack, ...rest } = { ...state };\n\n  const text = stack.map(o => `\\n| ${o.type}: ${o.value}`).toString();\n\n  console.log('\\n state: ', state,\n    '\\n', '\\n', '++stack+++++++', text, '\\n ++stack_end+++\\n ',\n    '\\n', 'flags: ', rest,\n    '\\n \\n '\n  );\n\n}\n\nconst mapState = (state) => {\n  // logState(state);\n  return {\n    display: state.display,\n    instant: state.immediateExecutionLogic\n  }\n}\nexport default connect(mapState)(Display);","import React from 'react';\nimport {\n  MODE, CLEAR,\n  SEVEN, EIGHT, NINE, DIVIDE,\n  FOUR, FIVE, SIX, MULTIPLY,\n  ONE, TWO, THREE, SUBTRACT,\n  ZERO, DECIMAL, EQUALS, ADD\n} from '../actions/types';\n\n//\nconst keyMapping = [\n  { id: 'mode', text: <i className=\"fas fa-cog op-font-size\"></i>, action: MODE },\n  { id: 'clear', text: 'C', action: CLEAR },\n  { id: 'seven', text: '7', action: SEVEN },\n  { id: 'eight', text: '8', action: EIGHT },\n  { id: 'nine', text: '9', action: NINE },\n  { id: 'divide', text: <i className=\"fas fa-divide op-font-size\"></i>, action: DIVIDE },\n  { id: 'four', text: '4', action: FOUR },\n  { id: 'five', text: '5', action: FIVE },\n  { id: 'six', text: '6', action: SIX },\n  { id: 'multiply', text: <i className=\"fas fa-times op-font-size\"></i>, action: MULTIPLY },\n  { id: 'one', text: '1', action: ONE },\n  { id: 'two', text: '2', action: TWO },\n  { id: 'three', text: '3', action: THREE },\n  { id: 'subtract', text: <i className=\"fas fa-minus op-font-size\"></i>, action: SUBTRACT },\n  { id: 'zero', text: '0', action: ZERO },\n  { id: 'decimal', text: '.', action: DECIMAL },\n  { id: 'equals', text: '=', action: EQUALS },\n  { id: 'add', text: <i className=\"fas fa-plus op-font-size\"></i>, action: ADD }\n];\n\nexport default keyMapping;\n","export const MODE = 'MODE';\nexport const CLEAR = 'CLEAR';\nexport const SEVEN = 'SEVEN';\nexport const EIGHT = 'EIGHT';\nexport const NINE = 'NINE';\nexport const DIVIDE = 'DIVIDE';\nexport const FOUR = 'FOUR';\nexport const FIVE = 'FIVE';\nexport const SIX = 'SIX';\nexport const MULTIPLY = 'MULTIPLY';\nexport const ONE = 'ONE';\nexport const TWO = 'TWO';\nexport const THREE = 'THREE';\nexport const SUBTRACT = 'SUBTRACT';\nexport const ZERO = 'ZERO';\nexport const DECIMAL = 'DECIMAL';\nexport const EQUALS = 'EQUALS';\nexport const ADD = 'ADD';","import React from 'react'\nimport { connect } from 'react-redux';\nimport { keypress } from '../actions';\n\n\nfunction Key(props) {\n\n  const { id, text, action } = props.keyMapping\n  let keyRef;\n\n  // handleKeypress\n  const handleKeypress = (action, text, ref) => {\n    resetAnimation(ref)\n    props.keypress(action, text)\n  }\n\n  //\n  const resetAnimation = (ref) => {\n    ref.classList.remove('bounceIn');\n    setTimeout(() => {\n      ref.classList.add('bounceIn');\n    }, 1);\n  }\n\n  return (\n    < div key={id} className='key-container' >\n      <div\n        id={id}\n        className='key bounceIn'\n        ref={ref => keyRef = ref}\n        onClick={() => handleKeypress(action, text, keyRef)}\n      >\n        <p>\n          {text}\n        </p>\n      </div>\n    </div >\n  )\n}\n\n\nexport default connect(null, { keypress })(Key);\n","export const keypress = (key, text) => {\n  return {\n    type: key,\n    text: text\n  }\n}","import React from 'react';\nimport './css/Keypad.css';\nimport keyMapping from '../mapping/keyMapping';\nimport Key from './Key';\n\nfunction KeyPad(props) {\n\n\n  //\n  const renderKeys = () => {\n    let keys = [];\n    for (let i = 0; i < keyMapping.length; i++) {\n      const keyMap = keyMapping[i];\n      keys.push(\n        <Key\n          keyMapping={keyMap}\n          key={keyMap.id}\n        />\n      );\n    }\n    return keys;\n  }\n\n  //\n  return (\n    <div className='keypad-container'>\n      <div className='keys'>\n        <div className='logo'>\n          <i className=\"fab fa-free-code-camp\"></i>\n        </div>\n        {renderKeys()}\n      </div>\n    </div>\n  )\n}\n\n// export default connect(null, { keypress })(KeyPad);\nexport default KeyPad;","import './css/App.css';\nimport React from 'react';\nimport Display from './Display';\nimport Keypad from './Keypad';\n\nconst App = () => {\n  return (\n    <div className='outer-container'>\n      <div className='calculator'>\n        <Display />\n        <Keypad />\n      </div>\n      <footer>\n        FreeCodeCamp Javascript Calculator &copy;&nbsp;Luca&nbsp;M&nbsp;-&nbsp;\n        <a href='https://github.com/lukino999/FCC-JavaScript-calculator' target='_blank'>source</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","// for debugging only\nimport { logState } from '../components/Display'\n\nimport {\n  MODE,\n  CLEAR,\n  ZERO,\n  ONE,\n  TWO,\n  THREE,\n  FOUR,\n  FIVE,\n  SIX,\n  SEVEN,\n  EIGHT,\n  NINE,\n  DECIMAL,\n  ADD,\n  SUBTRACT,\n  MULTIPLY,\n  DIVIDE,\n  EQUALS\n} from '../actions/types';\n\n\n// CONSTANTS\nconst VAL = 'VAL';\nconst OP = 'OP';\nconst PRECISION = 16\n\n//\nconst INITIAL_STATE = {\n  display: '0',\n  temp: '',\n  stack: [],\n  zeroIsAllowed: false,\n  lastEntryWasOp: false,\n  immediateExecutionLogic: true\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n\n  // console.log('Action: ', action.type);\n\n  const {\n    temp,\n    stack,\n    display,\n    lastEntryWasOp,\n    zeroIsAllowed,\n    immediateExecutionLogic\n  } = state;\n\n  switch (action.type) {\n    case MODE:\n      return {\n        ...state,\n        immediateExecutionLogic: !immediateExecutionLogic\n      }\n\n    //\n    case CLEAR:\n      return {\n        ...INITIAL_STATE,\n        immediateExecutionLogic: immediateExecutionLogic\n      };\n\n    //\n    case EQUALS:\n      let res = calculate(state);\n      return {\n        ...INITIAL_STATE,\n        immediateExecutionLogic: immediateExecutionLogic,\n        display: res\n      }\n\n    //\n    case SUBTRACT:\n      if (lastEntryWasOp && (stack[stack.length - 1] === SUBTRACT)) {\n        return state;\n      }\n      if (lastEntryWasOp) {\n        return {\n          ...state,\n          temp: '-'\n        }\n      }\n\n      if (display === '0') {\n        return {\n          ...state,\n          temp: '-',\n          display: '-'\n        }\n      }\n\n    //\n    case ADD:\n    case MULTIPLY:\n    case DIVIDE:\n    case SUBTRACT:\n      let tempStack;\n      if (lastEntryWasOp) {\n        tempStack = [...stack];\n        tempStack.pop();\n      } else {\n        if (temp === '-') {\n          return state;\n        }\n        tempStack = [...stack, { type: VAL, value: parseFloat(display) }]\n      }\n\n      return {\n        ...state,\n        temp: '',\n        stack: [...tempStack, { type: OP, value: action.type }],\n        lastEntryWasOp: true\n      }\n\n\n    //\n    case DECIMAL:\n      if (isTooLong(temp)) return state;\n\n      if (lastEntryWasOp) {\n        return {\n          ...state,\n          display: temp + '0.',\n          temp: temp + '0.',\n          lastEntryWasOp: false,\n          zeroIsAllowed: true\n        }\n      }\n\n      if (display.includes('.')) {\n        return state;\n      }\n\n      if (display === '0') {\n        return {\n          ...state,\n          display: '0.',\n          temp: '0.',\n          zeroIsAllowed: true\n        }\n      }\n\n      if (display === '-') {\n        return {\n          ...state,\n          display: '-0.',\n          temp: '-0.',\n          zeroIsAllowed: true\n        }\n      }\n\n      return {\n        ...state,\n        display: display + '.',\n        temp: display + '.',\n        zeroIsAllowed: true\n      }\n\n\n    //\n    case ZERO:\n      if (isTooLong(temp)) return state;\n\n      if (!zeroIsAllowed) {\n        return state;\n      }\n\n      if (lastEntryWasOp) {\n        return {\n          ...state,\n          display: '0',\n          zeroIsAllowed: false\n        }\n      }\n\n      return {\n        ...state,\n        display: temp + '0',\n        temp: temp + '0'\n      }\n\n\n\n    //\n    case ONE:\n    case TWO:\n    case THREE:\n    case FOUR:\n    case FIVE:\n    case SIX:\n    case SEVEN:\n    case EIGHT:\n    case NINE:\n      if (isTooLong(temp)) return state;\n\n      if (lastEntryWasOp) {\n        return {\n          ...state,\n          display: temp + action.text,\n          temp: temp + action.text,\n          lastEntryWasOp: false,\n          zeroIsAllowed: true\n        }\n      }\n\n      return {\n        ...state,\n        display: temp + action.text,\n        temp: temp + action.text,\n        zeroIsAllowed: true\n      }\n\n    //\n    default:\n      return state;\n  }\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst calculate = (state) => {\n\n  const stack = [...state.stack, { type: VAL, value: parseFloat(state.display) }];\n\n  // logState({ stack });\n\n  if (state.immediateExecutionLogic) {\n    // immediate execution logic:\n    // the operation are executed in the order they've been entered\n    // console.log('immediateExecution');\n\n    while (stack.length > 2) {\n      const firstOperand = stack.shift().value;\n      const op = stack.shift().value;\n      const secondOperand = stack.shift().value;\n      let res = 0;\n\n      switch (op) {\n        case ADD:\n          res = firstOperand + secondOperand;\n          break;\n\n        case SUBTRACT:\n          res = firstOperand - secondOperand;\n          break;\n\n        case MULTIPLY:\n          res = firstOperand * secondOperand;\n          break;\n\n        case DIVIDE:\n          res = firstOperand / secondOperand;\n          break;\n      }\n\n      stack.unshift({ type: VAL, value: res })\n      // logState({ stack });\n    }\n  } else {\n    // formula logic:\n\n    // first execute all MULTIPLYs and DIVIDEs\n    let i = 1\n    while (stack.length > i) {\n      let res;\n      const op = stack[i].value;\n      if ((op === MULTIPLY) || (op === DIVIDE)) {\n        const firstOperand = stack[i - 1].value;\n        const secondOperand = stack[i + 1].value;\n\n        res = (op === MULTIPLY) ? (firstOperand * secondOperand) : (firstOperand / secondOperand);\n        // console.log(`Operation: ${firstOperand} ${op} ${secondOperand} = ${res} `);\n        stack.splice(i - 1, 3, { type: VAL, value: res });\n      } else {\n        i += 2;\n      }\n      // logState({ i: i, stack });\n    }\n\n    // now execute all ADDs and SUBTRACTs\n    while (stack.length >= 3) {\n      let res;\n      const firstOperand = stack[0].value;\n      const op = stack[1].value;\n      const secondOperand = stack[2].value;\n      res = (op === ADD) ? (firstOperand + secondOperand) : (firstOperand - secondOperand);\n      stack.splice(0, 3, { type: VAL, value: res });\n      // logState({ stack });\n    }\n  }\n\n  // \n  return stack[0].value\n}\n\n\nfunction isTooLong(string) {\n  let temp = string[0] === '-' ? string.split('-')[1] : string;\n  const [integer, decimal] = (temp).split('.');\n  let digits = decimal ? integer.length + decimal.length : integer.length;\n  digits = integer === '0' ? digits - 1 : digits;\n  return digits >= PRECISION;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}